[project]
name = "poc"
version = "0.1.0"
description = ""
authors = [{ name = "haekyu.cho", email = "haekyu.cho@nhn.com" }]
readme = "README.md"
requires-python = ">=3.11,<3.12"
dependencies = [
    "jupyter (>=1.1.1,<2.0.0)",
    "plotly (>=6.0.1,<7.0.0)",
    "pandas (>=2.2.3,<3.0.0)",
    "openpyxl (>=3.1.5,<4.0.0)",
    "python-dateutil (>=2.9.0.post0,<3.0.0)",
    "python-dotenv (>=1.1.0,<2.0.0)",
    "mysql-connector-python (>=9.2.0,<10.0.0)",
    "tqdm (>=4.67.1,<5.0.0)",
    "requests (>=2.32.3,<3.0.0)",
    "rich (>=14.0.0,<15.0.0)",
    "torch (>=2.6.0,<3.0.0)",
    "sounddevice (>=0.5.1,<0.6.0)",
    "speechrecognition (>=3.14.2,<4.0.0)",
    "pyaudio (>=0.2.14,<0.3.0)",
    "langchain (>=0.3.23,<0.4.0)",
    "nltk (>=3.9.1,<4.0.0)",
    "openai-whisper (>=20240930,<20240931)",
    "suno-bark (>=0.1.5,<0.2.0)",
    "ruff (>=0.11.5,<0.12.0)",
    "pydub (>=0.25.1,<0.26.0)",
    "pyannote-audio (>=3.3.2,<4.0.0)",
    "torchaudio (>=2.6.0,<3.0.0)",
    "pyjwt (>=2.10.1,<3.0.0)",
    "langchain-core (>=0.3.52,<0.4.0)",
    "langchain-google-genai (>=2.1.2,<3.0.0)",
    "paddlepaddle (>=3.0.0,<4.0.0)",
    "paddleocr (>=2.10.0,<3.0.0)",
    "opencv-python (>=4.11.0.86,<5.0.0.0)",
    "pytesseract (>=0.3.13,<0.4.0)",
    "opencv-python-headless (>=4.11.0.86,<5.0.0.0)",
    "pillow (>=11.2.1,<12.0.0)",
    "pooch (>=1.8.2,<2.0.0)",
    "rembg (>=2.0.65,<3.0.0)",
    "onnxruntime (>=1.21.0,<2.0.0)",
    "markdown (>=3.8,<4.0)",
    "weasyprint (>=65.1,<66.0)",
    "librosa (>=0.11.0,<0.12.0)",
    "soundfile (>=0.13.1,<0.14.0)",
    "scipy (>=1.15.2,<2.0.0)",
    "noisereduce (>=3.0.3,<4.0.0)",
    "langchain-google-vertexai (>=2.0.20,<3.0.0)",
    "diffusers[torch] (>=0.33.1,<0.34.0)",
    "transformers (>=4.51.3,<5.0.0)",
    "accelerate (>=1.6.0,<2.0.0)",
    "langchain-ollama (>=0.3.2,<0.4.0)",
    "torchvision (>=0.22.0,<0.23.0)",
]
[tool.ruff]
line-length = 88
select = ["E", "F", "W", "C90"]
ignore = ["E203", "E266", "E501", "W503"]
exclude = [
    ".git",
    ".venv",
    "build",
    "dist",
    "__pycache__",
    "migrations",
    "node_modules",
]


[tool.poetry]
packages = [{ include = "poc", from = "src" }]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
